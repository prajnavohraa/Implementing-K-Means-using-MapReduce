# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mapper_pb2 as mapper__pb2


class MapperStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessData = channel.unary_unary(
                '/mapper.Mapper/ProcessData',
                request_serializer=mapper__pb2.MapRequest.SerializeToString,
                response_deserializer=mapper__pb2.MapResponse.FromString,
                )
        self.GetPartition = channel.unary_unary(
                '/mapper.Mapper/GetPartition',
                request_serializer=mapper__pb2.PartitionRequest.SerializeToString,
                response_deserializer=mapper__pb2.PartitionResponse.FromString,
                )


class MapperServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ProcessData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartition(self, request, context):
        """rpc UpdateCentroids(UpdateCentroidsRequest) returns (UpdateCentroidsResponse); //this not used 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapperServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessData': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessData,
                    request_deserializer=mapper__pb2.MapRequest.FromString,
                    response_serializer=mapper__pb2.MapResponse.SerializeToString,
            ),
            'GetPartition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPartition,
                    request_deserializer=mapper__pb2.PartitionRequest.FromString,
                    response_serializer=mapper__pb2.PartitionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mapper.Mapper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mapper(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ProcessData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapper.Mapper/ProcessData',
            mapper__pb2.MapRequest.SerializeToString,
            mapper__pb2.MapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapper.Mapper/GetPartition',
            mapper__pb2.PartitionRequest.SerializeToString,
            mapper__pb2.PartitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReducerStub(object):
    """message CentroidResult {
    int32 key = 1;
    float x = 2;
    float y = 3;
    }

    message CollectResultsRequest {

    }

    message CollectResultsResponse {
    repeated CentroidResult results = 1;
    bool success = 2;
    }

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReduceData = channel.unary_unary(
                '/mapper.Reducer/ReduceData',
                request_serializer=mapper__pb2.ReduceRequest.SerializeToString,
                response_deserializer=mapper__pb2.ReduceResponse.FromString,
                )


class ReducerServicer(object):
    """message CentroidResult {
    int32 key = 1;
    float x = 2;
    float y = 3;
    }

    message CollectResultsRequest {

    }

    message CollectResultsResponse {
    repeated CentroidResult results = 1;
    bool success = 2;
    }

    """

    def ReduceData(self, request, context):
        """rpc SendResults(CollectResultsRequest) returns (CollectResultsResponse);
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReducerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReduceData': grpc.unary_unary_rpc_method_handler(
                    servicer.ReduceData,
                    request_deserializer=mapper__pb2.ReduceRequest.FromString,
                    response_serializer=mapper__pb2.ReduceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mapper.Reducer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Reducer(object):
    """message CentroidResult {
    int32 key = 1;
    float x = 2;
    float y = 3;
    }

    message CollectResultsRequest {

    }

    message CollectResultsResponse {
    repeated CentroidResult results = 1;
    bool success = 2;
    }

    """

    @staticmethod
    def ReduceData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapper.Reducer/ReduceData',
            mapper__pb2.ReduceRequest.SerializeToString,
            mapper__pb2.ReduceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
